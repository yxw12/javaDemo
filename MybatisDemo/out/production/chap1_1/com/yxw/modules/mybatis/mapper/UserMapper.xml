<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace：命名空间，用于隔离sql，还有一个很重要的作用，后面会讲 -->
<mapper namespace="com/yxw/modules/mybatis/mapper/UserMapper">

    <!-- id:statement的id 或者叫做sql的id-->
    <!-- parameterType:声明输入参数的类型 -->
    <!-- resultType:声明输出结果的类型，应该填写pojo的全路径 -->
    <!-- #{}：输入参数的占位符，相当于jdbc的？ -->
    <select id="selectId" parameterType="Integer" resultType="com.yxw.modules.mybatis.pojo.User">
        select *
        from user
        where id = #{id}
    </select>
    <select id="selectName" parameterType="String" resultType="com.yxw.modules.mybatis.pojo.User">
        select *
        from user
        where username like '%${value}%'
    </select>
    <select id="selectAll"  resultType="com.yxw.modules.mybatis.pojo.User">
        select *
        from user

    </select>
    <delete id="deleteUser" parameterType="Integer" >
        DELETE
        FROM user
        WHERE id=#{id}
    </delete>
    <update id="updateUser" parameterType="com.yxw.modules.mybatis.pojo.User">
        UPDATE USER
        SET username=#{username},birthday=#{birthday},sex=#{sex},address=#{address}
        WHERE id=#{id}
    </update>
    <insert id="insertUser" parameterType="com.yxw.modules.mybatis.pojo.User">
        <!-- selectKey 标签实现主键返回 -->
        <!-- keyColumn:主键对应的表中的哪一列 -->
        <!-- keyProperty：主键对应的pojo中的哪一个属性 -->
        <!-- order：设置在执行insert语句前执行查询id的sql，孩纸在执行insert语句之后执行查询id的sql -->
        <!-- resultType：设置返回的id的类型 -->
        <selectKey keyColumn="id" keyProperty="id" order="AFTER"
                   resultType="int">
            SELECT LAST_INSERT_ID()
        </selectKey>

        INSERT into USER
        VALUES (#{id},#{username},#{birthday},#{sex},#{address})
    </insert>
</mapper>