<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace：命名空间，用于隔离sql，还有一个很重要的作用，后面会讲 -->
<mapper namespace="com.yxw.modules.mybatis2.mapper.OrderDaoMapper">
    <select id="selectAllOrders"  resultType="com.yxw.modules.mybatis.pojo.Order">
        select *
        from orders

    </select>

    <insert id="insertOrder" parameterType="com.yxw.modules.mybatis.pojo.Order">
        INSERT into orders
        VALUES (#{id},#{user_id},#{number},#{createtime},#{note})
    </insert>

    <resultMap id="list" type="user">
        <!-- 定义主键 ,非常重要。如果是多个字段,则定义多个id -->
        <!-- property：主键在pojo中的属性名 -->
        <!-- column：主键在数据库中的列名 -->
        <id property="id" column="id"/>
        <!-- 定义普通属性 -->
        <result property="username" column="username"/>
        <result property="birthday" column="birthday"/>
        <result property="sex" column="sex"/>
        <result property="address" column="address"/>
        <!-- 配置一对多的关系 -->
        <collection property="orders"  javaType="list" ofType="order">
            <!-- 配置主键，是关联Order的唯一标识 -->
            <id property="id" column="id"/>
            <result property="userId" column="user_id"/>
            <result property="number" column="number"/>
        </collection>
    </resultMap>
    <!-- 一对多关联，查询用户，用户内部包含多个订单属性 -->
    <select id="findAllUser"  resultMap="list">
        SELECT
        u.id,
        u.username,
        u.birthday,
        u.sex,
        u.address,
        o.id,
        o.number
        FROM user u left join orders o on o.user_id=u.id
    </select>
</mapper>